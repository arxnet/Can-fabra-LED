#include <FastLED.h>
#define NUM_LEDS 120
#define DATA_PIN 8
CRGB leds[NUM_LEDS];
int ledActualP= 1; //led central
int ledActualR= 1; //led central
int queso = random(NUM_LEDS)% NUM_LEDS;
int puntosP = 0;
int puntosR = 0;
bool pAlante = true;

void setup() {
   FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);
   Serial.begin(9600);
    randomSeed(39); 

}

void loop() {
  int estadoEjeYP=analogRead(A0);
  int estadoEjeYR=analogRead(A2);
  Serial.println(  "Puntos purpurpura");
  Serial.println(puntosP);
  Serial.println(          );
  //Serial.println("Queso");
  
  FastLED.clear();
  leds[ledActualP] = CRGB::Purple;
  leds[ledActualP +1] = CRGB::Purple;
  leds[ledActualP -1] = CRGB::Purple;
   leds[ledActualR] = CRGB::Red;
  leds[ledActualR +1] = CRGB::Red;
  leds[ledActualR -1] = CRGB::Red;
  leds[queso] = CRGB::Yellow;
  FastLED.show();
   if (estadoEjeYP<112) {
    ledActualP=(ledActualP-2);
   }
  else if (estadoEjeYP<412) {
    ledActualP--;
  }
  else if (estadoEjeYP>612) {

    ledActualP++;
  }else if (estadoEjeYP>912){
  ledActualP=(ledActualP+2);
  }
  if (estadoEjeYR<112) {
    ledActualR=(ledActualR-2);
   }
  else if (estadoEjeYR<412) {
    ledActualR--;
  }
  else if (estadoEjeYR>612) {

    ledActualR++;
  }else if (estadoEjeYR>912){
  ledActualR=(ledActualR+2);
  }
  
 
if (ledActualP>118){
    ledActualP=118;
}

if (ledActualP<1){
  ledActualP=1;
}
if (ledActualR>118){
    ledActualR=118;
}

if (ledActualR<1){
  ledActualR=1;
}
MostrarPuntos();
}
  
  
  void MostrarPuntos(){
     
if (ledActualP==queso){
puntosP++;
FastLED.clear();
delay(100);
for(int a = 0; a < puntosP; a++){
  Serial.println("pase por el for");
leds[a] = CRGB::Purple;}
for(int b = NUM_LEDS - 1;b > NUM_LEDS-1-puntosR; b--){
  Serial.println("pase por el for");
  leds[b] = CRGB::Red;
  delay(50);
}
delay(50);
FastLED.show();
delay(2000);
queso=random(NUM_LEDS)% NUM_LEDS;
}

if (ledActualR==queso){
puntosR++;
for(int b = NUM_LEDS - 1;b > NUM_LEDS-1-puntosR; b--){
  Serial.println("pase por el for");
  leds[b] = CRGB::Red;
  delay(50);
}
for(int a = 0; a < puntosP; a++){
  Serial.println("pase por el for");
leds[a] = CRGB::Purple;}
FastLED.show();
delay(2000);
queso=random(NUM_LEDS)% NUM_LEDS;
}
  }

 
