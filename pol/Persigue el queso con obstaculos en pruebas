#include <LiquidCrystal.h>
#include <FastLED.h>
#define NUM_LEDS 120
#define DATA_PIN 8
#define BUTTON_PIN 7
CRGB leds[NUM_LEDS];
int ledActual = 1; //led central
bool pAlante = true;
int estadoEjeY= analogRead(A0);
int queso = random(1,NUM_LEDS);
int puntos = 0;
int minutos = 2;
int segundos = 0;
int obstaculoRandom = random(4,NUM_LEDS);
int obstaculo[4]= {obstaculoRandom,10,70,55};
long tiempoMaximo = 120000;
bool juego =false;
 LiquidCrystal lcd(12,11,5,4,3,2);

void setup() {
   FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);
   lcd.begin(16, 2);
   Serial.begin(9600);
   pinMode(BUTTON_PIN,INPUT_PULLUP);
}

void loop() {
 
  FastLED.clear();
  if (digitalRead(13) == 1){
    juego = true;
  }
  if (juego){
  Serial.println("juego es true y estamos aquÃ­");
  mostrarTiempo();
  comerQueso();
  obstaculos();
  if (obstaculo==false){
     moverConJoystik();
  }else{
    moverConBoton();
    }
  leds[ledActual] = CRGB::Purple;
  leds[ledActual +1] = CRGB::Purple;
  leds[ledActual -1] = CRGB::Purple;
  leds[queso] = CRGB::Yellow;
  leds[obstaculo[0]] = CRGB::Red;
  leds[obstaculo[1]] = CRGB::Red;
  leds[obstaculo[2]] = CRGB::Red;
  leds[obstaculo[3]] = CRGB::Red;
  FastLED.show();
   
   if(ledActual>=118){
   ledActual=118;
   }
   if(ledActual<=1){
    ledActual=1;
   }
   if(digitalRead(7)==HIGH){
   for (int i=0;i<=3;i++){
    obstaculo[i]=random(0,NUM_LEDS);
   }
   }
   

   //LCD
   lcd.setCursor(0,0);
   lcd.print("Puntos = ");
   lcd.print(puntos);



  }
   
   
  }

void mostrarTiempo(){
  long tiempoActual=millis();
  lcd.setCursor(1,0);
  lcd.print("Segundos ");
  lcd.print(tiempoActual-tiempoMaximo/1000);
  
}
 void comerQueso(){
   if(ledActual==queso){
    puntos++;
    queso=random(0,NUM_LEDS);
   }
 }

void obstaculos(){
  
   unsigned long currentTime = millis();
   int previousTime = 0;
   long interval = 60000;
   if (currentTime - previousTime > interval){
    obstaculoRandom=random(4,NUM_LEDS);
    obstaculo[0]=  obstaculoRandom;
    previousTime =  currentTime;
   }
   for(int i=0;i<=3;i++){
    if(obstaculo[i]==ledActual){
      digitalWrite(9,HIGH);
      delay(4000);
      digitalWrite(9,LOW);  
    }
    }
   }


void moverConJoystik(){

  estadoEjeY = analogRead(A0);
   
  if (estadoEjeY<112) {
    ledActual--;
    
  }
 if (estadoEjeY<312) {
    ledActual--;   
  }
  if (estadoEjeY<600){
   }
   if (estadoEjeY<660){
    ledActual++;
   }
   if(estadoEjeY<860){
    ledActual++;
   }
}


void moverConBoton(){

  bool estadoBoton=BUTTON_PIN;
  bool estadoBotonanterior = false;

if(estadoBoton==true){
  estadoBotonanterior=true;
}else{
estadoBotonanterior=false;  
}
if(estadoBotonanterior==true){
  
 ledActual=(ledActual+3);
}
  
  

  
  
}
